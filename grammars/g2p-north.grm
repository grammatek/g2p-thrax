import 'common.grm' as common;
import 'g2p.grm' as g2p;

######## G2P-rules for clear Icelandic pronunciation with the minority Northern variant ('harðmæli') ###########################
#
# * input string is one token
# * input should be normalized (no digits, punctuation or other symbols, etc. are handled in this grammar)
# * compounds might not be entirely correctly transcribed, so decompounding is a good step to perform beforehand
# * exceptional cases are not handled, these should be listed in a manually edited pronunciation dictionary
#
# FSTs written as upper case are steps listed in the final export statement.
#
# This grammar was developed and tested using Version 1.3.3 of Thrax (http://www.openfst.org/twiki/bin/view/GRM/Thrax)
# and OpenFst 1.7.7 (http://www.openfst.org/twiki/bin/view/FST/WebHome)
#
# To compile and test this grammar from the command line:
#
# $thraxmakedep g2p-north.grm
# $make
# $thraxrewrite-tester --far=g2p-north.far --rules=G2P --input_mode=utf8 --output_mode=utf8
#
#############################################################################################################

# all possible input and output symbols
sigma_star = common.whole_alphabet*;

########################################
#
#  ASPIRATION-NORTH 
#
########################################

north_aspir_rule = CDRewrite[g2p.post_aspir, (common.vowel | ":".utf8), "[EOS]" | common.plus_or_space (common.vowel | common.liquid), sigma_star];
insert_post_aspir = Optimize[north_aspir_rule @ g2p.post_aspir_rule];

export ASPIRATION = Optimize[insert_post_aspir @ g2p.insert_pre_aspir];

export STEP_5 = Optimize[ASPIRATION];

export G2P = Optimize[g2p.STEP_1 @ g2p.STEP_2 @ g2p.STEP_3 @ g2p.STEP_4 
  @ STEP_5 @ g2p.STEP_6 @ g2p.STEP_7 @ g2p.STEP_8 @ g2p.STEP_9 @ g2p.STEP_10];
